name: Guestbook CI/CD - Staging

on:
  push:
    branches:
      - staging

permissions:
  contents: write

jobs:
  build-and-deploy-staging:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/guestbook
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
      COMMIT_EMAIL: "github-actions@example.com"
      COMMIT_NAME: "GitHub Actions"
      MANIFESTS_REPO: "udemykcloud/Argocd" 

    steps:
    - name: Checkout Staging Branch
      uses: actions/checkout@v4
      with:
        ref: staging

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install backend dependencies
      run: |
        pip install -r app/requirements.txt
        pip install pytest pytest-cov

    - name: Run backend tests (ignore failures)
      run: |
        pytest --cov=app --cov-report=term-missing app/
      continue-on-error: true

    - name: Log in to Docker Hub
      run: echo "${DOCKERHUB_PASSWORD}" | docker login -u "${DOCKERHUB_USERNAME}" --password-stdin

    - name: Build and push Docker image
      run: |
        IMAGE_TAG="staging-$(date +%Y%m%d-%H%M%S)-${GITHUB_SHA::7}"
        echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_ENV
        docker build -t ${IMAGE_NAME}:${IMAGE_TAG} ./app
        docker push ${IMAGE_NAME}:${IMAGE_TAG}

    - name: Update Staging Manifest in Separate Repo
      run: |
        git clone https://x-access-token:${{ secrets.ARGO_GITHUB_TOKEN }}@github.com/${MANIFESTS_REPO}.git manifests-repo
        cd manifests-repo

        git checkout staging
        OVERLAY_PATH="kustomization-guestbook-multiple-environment/Overlays/dev"
        
        cd $OVERLAY_PATH
        kustomize edit set image ${IMAGE_NAME}=${IMAGE_NAME}:${IMAGE_TAG}
        cd ../../..

        git config --global user.email "${COMMIT_EMAIL}"
        git config --global user.name "${COMMIT_NAME}"
        git add ${OVERLAY_PATH}/kustomization.yaml
        git commit -m "Staging: Update image to ${IMAGE_NAME}:${IMAGE_TAG}" || echo "No changes to commit"
        git push origin staging
